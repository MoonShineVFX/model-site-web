name: Test and Deploy to Cloud Run
on:
  push:
    branches:
      - main
      - dev
      - _test_cicd

env:
  PROJECT_ID: ms-model-lib
  SERVICE_NAME: frontend-web-dev
  HOST: market-dev.moonshine.tw

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Override next.js env
        env:
          RECAPTCHA_KEY: ${{ secrets.MODEL_LIB_RECAPTCHA_KEY }}
          GOOGLE_SIGNIN_CLIENTID: ${{ secrets.MODEL_LIB_GOOGLE_SIGNIN_CLIENTID }}
          TAWKTO_PROPERTYID: ${{ secrets.MODEL_LIB_TAWKTO_PROPERTYID }}
          TAWKTO_TAWKID: ${{ secrets.MODEL_LIB_TAWKTO_TAWKID }}
          GOOGLE_GAID: ${{ secrets.MODEL_LIB_GOOGLE_GAID }}
        run: |
          echo "NEXT_PUBLIC_HOST=$HOST" >> .env
          echo "NEXT_PUBLIC_RECAPTCHA_KEY=$RECAPTCHA_KEY" >> .env
          echo "NEXT_PUBLIC_GOOGLE_SIGNIN_CLIENTID=$GOOGLE_SIGNIN_CLIENTID" >> .env
          echo "NEXT_PUBLIC_TAWKTO_PROPERTYID=$TAWKTO_PROPERTYID" >> .env
          echo "NEXT_PUBLIC_TAWKTO_TAWKID=$TAWKTO_TAWKID" >> .env
          echo "NEXT_PUBLIC_GAID=$GOOGLE_GAID" >> .env

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: npm run dev
          wait-on: 'http://localhost:8080'
          record: true
          browser: chrome
    env:
      CYPRESS_RECORD_KEY: ${{ secrets.TEST_CYPRESS_RECORD_KEY }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: cypress-run
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

#      - name: Change SERVICE_NAME if dev
#        if: github.ref == 'refs/heads/dev'
#        run: |
#          echo "SERVICE_NAME=$SERVICE_NAME-dev" >> $GITHUB_ENV
#          echo "HOST=market-dev.moonshine.tw" >> $GITHUB_ENV

#      - name: Override next.js env
#        env:
#          RECAPTCHA_KEY: ${{ secrets.MODEL_LIB_RECAPTCHA_KEY }}
#          GOOGLE_SIGNIN_CLIENTID: ${{ secrets.MODEL_LIB_GOOGLE_SIGNIN_CLIENTID }}
#          TAWKTO_PROPERTYID: ${{ secrets.MODEL_LIB_TAWKTO_PROPERTYID }}
#          TAWKTO_TAWKID: ${{ secrets.MODEL_LIB_TAWKTO_TAWKID }}
#          GOOGLE_GAID: ${{ secrets.MODEL_LIB_GOOGLE_GAID }}
#        run: |
#          echo "NEXT_PUBLIC_HOST=$HOST" >> .env.local
#          echo "NEXT_PUBLIC_RECAPTCHA_KEY=$RECAPTCHA_KEY" >> .env.local
#          echo "NEXT_PUBLIC_GOOGLE_SIGNIN_CLIENTID=$GOOGLE_SIGNIN_CLIENTID" >> .env.local
#          echo "NEXT_PUBLIC_TAWKTO_PROPERTYID=$TAWKTO_PROPERTYID" >> .env.local
#          echo "NEXT_PUBLIC_TAWKTO_TAWKID=$TAWKTO_TAWKID" >> .env.local
#          echo "NEXT_PUBLIC_GAID=$GOOGLE_GAID" >> .env.local

#      - id: auth
#        uses: google-github-actions/auth@v0.4.0
#        with:
#          credentials_json: ${{ secrets.MODEL_LIB_GCP_SA_KEY }}

#      - name: Set up Cloud SDK
#        uses: google-github-actions/setup-gcloud@v0.3.0
#        with:
#          project_id: ${{ env.PROJECT_ID }}

#      - name: Build image
#        run: |-
#          gcloud builds submit \
#            --quiet \
#            --config cloudbuild.yaml \
#            --substitutions=_SERVICE_NAME=$SERVICE_NAME

#      - name: Deploy to Cloud Run
#        run: |-
#          gcloud run deploy $SERVICE_NAME \
#            --region asia-east1 \
#            --image "asia-east1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/$SERVICE_NAME:latest" \
#            --platform "managed" \
#            --quiet
